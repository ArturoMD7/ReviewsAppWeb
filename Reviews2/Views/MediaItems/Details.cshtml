@model Reviews2.Models.MediaItemDetailsViewModel
@using Microsoft.AspNet.Identity
@using Reviews2.Models

@{
    ViewBag.Title = "Detalles del Medio";
}

<div class="media-details-container">
    <h2>@Model.MediaItem.Titulo</h2>
    <hr />

    <div class="row">
        <!-- Image column -->
        <div class="col-md-4">
            @if (!string.IsNullOrEmpty(Model.MediaItem.ImagenUrl))
            {
                <img src="@Model.MediaItem.ImagenUrl"
                     alt="@Model.MediaItem.Titulo"
                     class="img-responsive thumbnail"
                     style="max-height: 300px;"
                     onerror="this.onerror=null;this.src='/Content/avatars/default.png';" />
            }
            else
            {
                <div class="no-image-placeholder">
                    <i class="glyphicon glyphicon-picture" style="font-size: 200px; color: #ddd;"></i>
                </div>
            }
        </div>

        <!-- Details column -->
        <div class="col-md-8">
            <dl class="dl-horizontal">
                <dt>Descripción</dt>
                <dd>@Model.MediaItem.Descripcion</dd>

                <dt>Plataforma</dt>
                <dd>@(string.IsNullOrEmpty(Model.MediaItem.Plataforma) ? "No especificada" : Model.MediaItem.Plataforma)</dd>

                <dt>Fecha de publicación</dt>
                <dd>@(Model.MediaItem.FechaPublicacion?.ToString("d") ?? "No especificada")</dd>

                <dt>Categoría</dt>
                <dd>@(Model.MediaItem.Category?.Nombre ?? "Sin categoría")</dd>
            </dl>
        </div>
    </div>

    <h3>Opiniones de usuarios</h3>
    <div class="opiniones-container">
        @if (Model.MediaItem.Opinions != null && Model.MediaItem.Opinions.Any())
        {
            foreach (var opinion in Model.MediaItem.Opinions.OrderByDescending(o => o.Fecha))
            {
                
                var usuarioInfo = Model.UsuariosInfo?.ContainsKey(opinion.UsuarioId) == true
                    ? Model.UsuariosInfo[opinion.UsuarioId]
                    : new UserInfoViewModel
                    {
                        UserName = opinion.AspNetUser?.UserName ?? "Usuario",
                        NombreCompleto = !string.IsNullOrWhiteSpace(opinion.AspNetUser?.NombreCompleto)
                            ? opinion.AspNetUser.NombreCompleto
                            : opinion.AspNetUser?.UserName ?? "Usuario anónimo",
                        AvatarUrl = !string.IsNullOrWhiteSpace(opinion.AspNetUser?.AvatarUrl)
                            ? opinion.AspNetUser.AvatarUrl
                            : "/Content/avatars/default.png"
                    };

                <div class="opinion-item panel panel-default">
                    <div class="panel-heading">
                        <div class="media">
                            <div class="media-left">
                                <img src="@(usuarioInfo.AvatarUrl.StartsWith("http") ? usuarioInfo.AvatarUrl : Url.Content(usuarioInfo.AvatarUrl))"
                                     alt="@usuarioInfo.NombreCompleto"
                                     class="img-circle user-avatar"
                                     width="40" height="40"
                                     loading="lazy"
                                     onerror="this.onerror=null;this.src='@Url.Content("~/Content/avatars/default.png")'" />
                            </div>
                            <div class="media-body">
                                <strong>@usuarioInfo.NombreCompleto</strong>


                                <span class="pull-right">
                                    @for (int i = 0; i < (opinion.Calificacion ?? 0); i++)
                                    {
                                        <span class="text-warning">★</span>
                                    }
                                </span>
                                <div class="text-muted small">
                                    @(opinion.Fecha?.ToString("g") ?? "Fecha no disponible")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        @opinion.Comentario
                    </div>
                </div>
            }
        }
        else
        {
            <div class="alert alert-info">No hay opiniones todavía. ¡Sé el primero en opinar!</div>
        }
    </div>

    <!-- Action buttons -->
    <div class="action-buttons">
        @if (User.IsInRole("Admin"))
        {
            @Html.ActionLink("Editar", "Edit", new { id = Model.MediaItem.Id }, new { @class = "btn btn-warning" })
            @Html.ActionLink("Eliminar", "Delete", new { id = Model.MediaItem.Id }, new { @class = "btn btn-danger" })
        }
        @Html.ActionLink("Volver al catálogo", "Index", "Home", null, new { @class = "btn btn-default" })
    </div>

    @if (User.Identity.IsAuthenticated)
    {
        <div class="opinion-form mt-4">
            <h4>Deja tu opinión</h4>
            @using (Html.BeginForm("Create", "Opinions", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="mediaItemId" value="@Model.MediaItem.Id" />

                <div class="form-group">
                    <label>Comentario:</label>
                    <textarea name="comentario" class="form-control" rows="3" required></textarea>
                </div>

                <div class="form-group">
                    <label>Calificación (1-5):</label>
                    <select name="calificacion" class="form-control">
                        <option value="1">★</option>
                        <option value="2">★★</option>
                        <option value="3" selected>★★★</option>
                        <option value="4">★★★★</option>
                        <option value="5">★★★★★</option>
                    </select>
                </div>

                <button type="submit" class="btn btn-primary">Enviar opinión</button>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info mt-4">
            @Html.ActionLink("Inicia sesión", "Login", "Account") para dejar tu opinión
        </div>
    }
</div>


<style>
    .media-details-container {
        margin-top: 20px;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 5px;
    }

    .no-image-placeholder {
        text-align: center;
        padding: 50px 0;
        border: 2px dashed #ddd;
    }

    .action-buttons {
        margin-top: 30px;
        padding-top: 15px;
        border-top: 1px solid #eee;
    }

    dt {
        width: 120px;
        text-align: left;
        margin-bottom: 5px;
    }

    dd {
        margin-left: 140px;
        margin-bottom: 10px;
    }

    .opiniones-container {
        margin-top: 30px;
    }

    .opinion-item {
        margin-bottom: 15px;
    }

    .panel-heading {
        padding: 8px 15px;
    }

    .user-avatar {
        object-fit: cover;
        border: 2px solid #eee;
        margin-right: 10px;
        transition: transform 0.3s ease;
    }

        .user-avatar:hover {
            transform: scale(1.1);
        }

    .opinion-item {
        transition: box-shadow 0.3s ease;
    }

        .opinion-item:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
</style>